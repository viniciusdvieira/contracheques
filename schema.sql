-- Esquema do sistema de contracheques

-- Tabela de usuários (login por matrícula)
CREATE TABLE IF NOT EXISTS users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  matricula VARCHAR(64) NOT NULL UNIQUE,
  nome TEXT,
  email TEXT,
  password_hash TEXT NOT NULL,
  must_change_password BOOLEAN NOT NULL DEFAULT TRUE,
  created_at TIMESTAMPTZ NOT NULL DEFAULT now()
);

-- Tabela de contracheques
CREATE TABLE IF NOT EXISTS payslips (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id BIGINT NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  referencia VARCHAR(32),                 -- ex.: 06/2024 ou 2024-06
  file_path TEXT NOT NULL,                -- ex.: contracheque/12345/2024-06.pdf
  pages_from INTEGER,                     -- opcional: página inicial no PDF grande
  pages_to INTEGER,                       -- opcional: página final no PDF grande
  created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
  CONSTRAINT uq_payslip_user_ref UNIQUE (user_id, referencia)
);

-- Índices úteis
CREATE INDEX IF NOT EXISTS idx_users_matricula ON users(matricula);
CREATE INDEX IF NOT EXISTS idx_payslips_user ON payslips(user_id);
CREATE INDEX IF NOT EXISTS idx_payslips_ref ON payslips(referencia);

-- Usuário de aplicação (se ainda não existir)
DO $$
BEGIN
  IF NOT EXISTS (SELECT FROM pg_roles WHERE rolname = 'contracheque_app') THEN
    CREATE ROLE contracheque_app LOGIN PASSWORD 'app_pass_alterar';
  END IF;
END$$;

-- Permissões para o usuário de aplicação
GRANT CONNECT ON DATABASE contracheque_db TO contracheque_app;
GRANT USAGE ON SCHEMA public TO contracheque_app;
GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA public TO contracheque_app;
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO contracheque_app;

-- Garantir que futuras tabelas/seq. recebam permissões automaticamente
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO contracheque_app;
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT USAGE, SELECT ON SEQUENCES TO contracheque_app;
